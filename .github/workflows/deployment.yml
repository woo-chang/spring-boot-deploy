name: Deploy SpringBoot

on:
  push:
    branches: [ develop ]

env:
  LANG: "ko_KR.UTF-8"
  LANGUAGE: "ko_KR.UTF-8"
  LC_ALL: "ko_KR.UTF-8"

jobs:
  deployment:
    runs-on: ubuntu-22.04
    timeout-minutes: 10

    steps:
      - name: 체크아웃해서 리포지토리를 가져온다.
        uses: actions/checkout@v3

      - name: 지역을 설정한다.
        run: |
          sudo locale-gen ko_KR.UTF-8
          sudo update-locale LANG=ko_KR.UTF-8

      - name: JDK 17을 설치한다.
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin

      - name: 환경 파일을 생성한다.
        working-directory: ./docker
        run: |
          touch .env
          echo "${{ secrets.DOCKER_ENV }}" >> .env

      - name: 설정 파일을 생성한다.
        working-directory: ./src/main/resources
        run: |
          touch application.yml
          echo '${{ secrets.APPLICATION_PROPERTIES }}' >> application.yml

      - name: 도커를 통해 DB 이미지를 생성한다.
        working-directory: ./docker
        run: docker build -t deploy-db -f db.dockerfile .

      - name: 도커 컴포즈를 활용해 테스트를 위한 컨테이너 환경을 구성한다.
        working-directory: ./docker
        run: docker-compose -p deploy up -d

      - name: 빌드를 수행한다.
        run: |
          ./gradlew build --daemon --build-cache --parallel
          java -Djarmode=layertools -jar build/libs/deploy-0.0.1-SNAPSHOT.jar extract

      - name: 컨테이너를 종료한다.
        if: always()
        working-directory: ./docker
        run: docker-compose down
